/**
 * Copyright (c) 2015-2017 Obeo, Inria
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 	
 * Contributors:
 * - William Piers <william.piers@obeo.fr>
 * - Philippe Merle <philippe.merle@inria.fr>
 * - Faiez Zalila <faiez.zalila@inria.fr>
 */
package awsregions.provider;

import awsregions.util.AwsregionsAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class AwsregionsItemProviderAdapterFactory extends AwsregionsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public AwsregionsItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Awsregion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AwsregionItemProvider awsregionItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Awsregion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAwsregionAdapter() {
		if (awsregionItemProvider == null) {
			awsregionItemProvider = new AwsregionItemProvider(this);
		}

		return awsregionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Us_east_2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Us_east_2ItemProvider us_east_2ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Us_east_2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUs_east_2Adapter() {
		if (us_east_2ItemProvider == null) {
			us_east_2ItemProvider = new Us_east_2ItemProvider(this);
		}

		return us_east_2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Us_east_1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Us_east_1ItemProvider us_east_1ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Us_east_1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUs_east_1Adapter() {
		if (us_east_1ItemProvider == null) {
			us_east_1ItemProvider = new Us_east_1ItemProvider(this);
		}

		return us_east_1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Eu_west_3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Eu_west_3ItemProvider eu_west_3ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Eu_west_3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEu_west_3Adapter() {
		if (eu_west_3ItemProvider == null) {
			eu_west_3ItemProvider = new Eu_west_3ItemProvider(this);
		}

		return eu_west_3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Us_west_1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Us_west_1ItemProvider us_west_1ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Us_west_1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUs_west_1Adapter() {
		if (us_west_1ItemProvider == null) {
			us_west_1ItemProvider = new Us_west_1ItemProvider(this);
		}

		return us_west_1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Eu_west_1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Eu_west_1ItemProvider eu_west_1ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Eu_west_1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEu_west_1Adapter() {
		if (eu_west_1ItemProvider == null) {
			eu_west_1ItemProvider = new Eu_west_1ItemProvider(this);
		}

		return eu_west_1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Ap_south_1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Ap_south_1ItemProvider ap_south_1ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Ap_south_1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAp_south_1Adapter() {
		if (ap_south_1ItemProvider == null) {
			ap_south_1ItemProvider = new Ap_south_1ItemProvider(this);
		}

		return ap_south_1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Sa_east_1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Sa_east_1ItemProvider sa_east_1ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Sa_east_1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSa_east_1Adapter() {
		if (sa_east_1ItemProvider == null) {
			sa_east_1ItemProvider = new Sa_east_1ItemProvider(this);
		}

		return sa_east_1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Us_west_2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Us_west_2ItemProvider us_west_2ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Us_west_2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUs_west_2Adapter() {
		if (us_west_2ItemProvider == null) {
			us_west_2ItemProvider = new Us_west_2ItemProvider(this);
		}

		return us_west_2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Eu_west_2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Eu_west_2ItemProvider eu_west_2ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Eu_west_2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEu_west_2Adapter() {
		if (eu_west_2ItemProvider == null) {
			eu_west_2ItemProvider = new Eu_west_2ItemProvider(this);
		}

		return eu_west_2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Ap_southeast_1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Ap_southeast_1ItemProvider ap_southeast_1ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Ap_southeast_1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAp_southeast_1Adapter() {
		if (ap_southeast_1ItemProvider == null) {
			ap_southeast_1ItemProvider = new Ap_southeast_1ItemProvider(this);
		}

		return ap_southeast_1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Ca_central_1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Ca_central_1ItemProvider ca_central_1ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Ca_central_1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCa_central_1Adapter() {
		if (ca_central_1ItemProvider == null) {
			ca_central_1ItemProvider = new Ca_central_1ItemProvider(this);
		}

		return ca_central_1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Ap_northeast_2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Ap_northeast_2ItemProvider ap_northeast_2ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Ap_northeast_2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAp_northeast_2Adapter() {
		if (ap_northeast_2ItemProvider == null) {
			ap_northeast_2ItemProvider = new Ap_northeast_2ItemProvider(this);
		}

		return ap_northeast_2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Ap_south_east2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Ap_south_east2ItemProvider ap_south_east2ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Ap_south_east2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAp_south_east2Adapter() {
		if (ap_south_east2ItemProvider == null) {
			ap_south_east2ItemProvider = new Ap_south_east2ItemProvider(this);
		}

		return ap_south_east2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Eu_central_1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Eu_central_1ItemProvider eu_central_1ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Eu_central_1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEu_central_1Adapter() {
		if (eu_central_1ItemProvider == null) {
			eu_central_1ItemProvider = new Eu_central_1ItemProvider(this);
		}

		return eu_central_1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link awsregions.Ap_northeast_1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Ap_northeast_1ItemProvider ap_northeast_1ItemProvider;

	/**
	 * This creates an adapter for a {@link awsregions.Ap_northeast_1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAp_northeast_1Adapter() {
		if (ap_northeast_1ItemProvider == null) {
			ap_northeast_1ItemProvider = new Ap_northeast_1ItemProvider(this);
		}

		return ap_northeast_1ItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (awsregionItemProvider != null) awsregionItemProvider.dispose();
		if (us_east_2ItemProvider != null) us_east_2ItemProvider.dispose();
		if (us_east_1ItemProvider != null) us_east_1ItemProvider.dispose();
		if (eu_west_3ItemProvider != null) eu_west_3ItemProvider.dispose();
		if (us_west_1ItemProvider != null) us_west_1ItemProvider.dispose();
		if (eu_west_1ItemProvider != null) eu_west_1ItemProvider.dispose();
		if (ap_south_1ItemProvider != null) ap_south_1ItemProvider.dispose();
		if (sa_east_1ItemProvider != null) sa_east_1ItemProvider.dispose();
		if (us_west_2ItemProvider != null) us_west_2ItemProvider.dispose();
		if (eu_west_2ItemProvider != null) eu_west_2ItemProvider.dispose();
		if (ap_southeast_1ItemProvider != null) ap_southeast_1ItemProvider.dispose();
		if (ca_central_1ItemProvider != null) ca_central_1ItemProvider.dispose();
		if (ap_northeast_2ItemProvider != null) ap_northeast_2ItemProvider.dispose();
		if (ap_south_east2ItemProvider != null) ap_south_east2ItemProvider.dispose();
		if (eu_central_1ItemProvider != null) eu_central_1ItemProvider.dispose();
		if (ap_northeast_1ItemProvider != null) ap_northeast_1ItemProvider.dispose();
	}

}
